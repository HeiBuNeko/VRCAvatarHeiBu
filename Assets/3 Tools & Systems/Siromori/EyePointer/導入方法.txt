
!!!!!!!!!!!!!!!!!!!!!!!!!!!!

--必ずお読みください。--

自分のアバターにシステムを導入する際に問題がある場合、お問い合わせいただく前に、以下の導入過程の説明と問題解決方法を先に読んでいただき、解決方法が難しい場合は、Unityに精通した友人に助けを求めてください。
下記の説明で十分に導入が可能であるにもかかわらず、自分の個人のアバターにシステムを簡単に導入する目的で制作者にお問い合わせしないでください。

!!!!!!!!!!!!!!!!!!!!!!!!!!!!


●はじめに

このセクションでは、EyePointerをあなたのアバターに組み込む方法について説明します。
実装を成功させるために、以下のステップに従ってください。

準備する Modular Avatar (v1.45以上)
(Link：https://modular-avatar.nadena.dev )

アバターのパラメータに29bitsのメモリが必要です。

このシステムにはModular Avatarが必要です。
Unityプロジェクトにインストールされていない場合は、まずModular Avatarをインストールし、EyePointer UnityPackageを再インポートすることをお勧めします。
準備が整ったら、以下の手順で始めてください。

1. EyePointer PrefabをHierarchyウィンドウに引き出します。

2. Hierarchy内のEyePointerを、目的のAvatarの中に配置します。

3. アバターのArmature/Hips/Spine/Chest/Neck/Headのパスに存在するアバターのEyeBoneを全て選択します、
   インスペクタウィンドウの「Add Component」ボタンを押し、「Aim Constraint」コンポーネントを追加します。
   
4. Aim Constraintの名前の左側にあるチェックボックスのチェックを外して、まずそれを無効にします。

5. Aim Constraint内で、「Sources」フィールドの下にある「+」ボタンを押して、ブランクを作成します、 
   先ほど移動した「EyePointer」の中に「Target」というオブジェクトをドラッグ＆ドロップし、「Zero」ボタンをクリックします。

6. Constraint Settings領域を展開し、Freeze Rotation AxesのZ軸のチェックボックスを解除してください。

7. アバターをアップロードして、EyePointerをお楽しみください！


●問題点と解決策

1. VRCでEyePointerを起動すると、瞳孔が正常に動作しません。
 a. 上記のようにAim Constraintが正しく設定されているか再確認してください。そうであれば、次のステップに進んでください。
 b. アバターのアーマチュアパスとメジャーブースのアーマチュアパスが異なる場合や、EyePointerのアニメーションにEye Bonesの名前が記録されていない場合があるようです。
    EyeBoneのパスがArmature/Hips/Spine/Chest/Neck/Headにない場合は、直接アニメーションを録画する必要があります。
    このような場合、'Toggle_On'と'Toggle_Off'と'Toggle_On_NoLook'アニメーションファイルを探し、アバターのアイボーンの位置に合わせて既存のプロパティのパス名を変更するか記録する必要があります。
	このドキュメントでは、Animationのパス名を変更したり記録したりする方法については説明していませんので、Unityに詳しい友人に聞いてみることをお勧めします。
	
2. コントロールタイプのターゲットの位置が、アバターの頭や手と自動的に正しく配置されていません。
 a. Modular Avatarがインストールされているかどうかを再度確認し、上記の手順で一からやり直してください。
 b. VCC のインストールが不足しているか、Modular Avatar のバージョン互換性の問題がある可能性があります。Unityに詳しいご友人に聞いてみることをおすすめします。

3.アバターに導入後、EyePointerを有効にすると、目が反転したり、消えたり、歪んだりします。
 a. これは、そのアバターのEye Boneの軸方向が適切でないために起こる問題です。
    UnityのAim Constraintを使用するためには、UnityのPivot, Local基準で、該当BoneのY軸方向が垂直に上を向いていて、Z軸方向線がアバターが見ている正面方向を向いている必要があります。
	そのEye Boneが正面を向いている基本状態の時、TransformコンポーネントのRotation値がX:0、Y:0、Z:0、またはこの数値に非常に近い値でなければAim Constraintが適切に動作しません。
	もし、Rotation値が上記の数値から外れている場合は、以下の方法に従ってください。
 b. これを修正する根本的な方法は、Blender、3DMax、Mayaなどの3D Modelingツールを使用してアイボーンの方向を適切に修正する必要があります。
    この場合、Avatar DescriptorのEyes項目下のRotation Statesの値を適切に再設定することで、VRCが提供する目の動きが正常に動作します。
 c 上記の方法が難しい初心者の方は 
    1.問題があるアバターの両側の目の骨の中に新しい空のオブジェクトを一つずつ生成した後、そのオブジェクトをHeadのすぐ下に移動します。
	2.もし、既存のEyeBoneの位置が正面から見た時、瞳孔の正中に位置しない場合、新しく作成した各オブジェクトの位置を瞳孔の正中に来るように移動します。
    3.生成したオブジェクトのTransformコンポーネントのRotation値に、X:0、Y:0、Z:0の値に変更し、そのオブジェクトの名前をそれぞれDummyEye_LとDummyEye_Rに変更します。
	4.問題があったアバターの元の目の骨をそれぞれ新しく生成したオブジェクトの中に適切に入れます。
	5.新しく生成した偽のEye Boneオブジェクトを基準に導入説明に沿ってシステムを導入します。
    この場合、Avatar DescriptorのEyes項目の下のTransformsに偽のEye Boneを置き換え、Rotation Statesの値を再度適切に設定することでVRCが提供する目の動きが正常に動作します。
	
4.瞳孔はちゃんと動くのですが、瞳孔のハートや星の形などのエフェクトが目の動きに追従しません。
 a. そのアバターのモデルがそのように作られたものです。 3D Modelingツールで取り込んで修正する方法しかありません。
 
5.Targetの距離を調整する時、頭基準または手基準でTargetが動く方向がおかしいです。
 a. アバターの手の骨や頭の骨の方向が一般的な他のアバターの場合と違って生じる現象です。
    アバターの中に移動したEyePointer PrefabをまずUnpackします。
	そしてその内部にあるTargetHead、あるいはTargetHand_L、TargetHand_RオブジェクトのMA Bone Proxyを消去した後、アバターアマチュア内の頭の骨や手の骨に直接入れて適切な方向に回転させる必要があります。
	UnityのPivot Local基準で、TargetHeadの緑色の矢印が上を、青色の矢印がアバターの正面を向くようにします。
	TargetHand_L、TargetHand_Rの緑色の矢印は両手それぞれの方向に、青い矢印は手の甲方向に回転させる必要があります。