        Pass
        {
            Name "PreStencil"

            Stencil
            {
                Ref 125 
                Comp Always
                Pass Replace
                ZFail Keep
            }
            Cull Off
            ZWrite Off
            ZTest LEqual
            ColorMask 0
            
            /*
            CGPROGRAM

            //----------------------------------------------------------------------------------------------------------------------
            // Build Option
            #pragma vertex vert
            #pragma fragment frag


            #include "UnityCG.cginc"
            //----------------------------------------------------------------------------------------------------------------------
            // Pass
            UNITY_DECLARE_DEPTH_TEXTURE(_CameraDepthTexture);

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float4 pos : SV_POSITION;
                float4 spos : TEXCOORD0;
                float2 uv : TEXCOORD1;
                float3 worldPos : TEXCOORD4;

            };

            v2f vert(appdata v)
            {
                v2f o;
                UNITY_INITIALIZE_OUTPUT(v2f, o);
                o.pos = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                o.worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;
                o.spos = ComputeScreenPos(o.pos);
                return o;
            }

            fixed4 frag(v2f i) : SV_Target
            {

            return 1;
                    float4 screenPos = float4(i.spos.xyz, i.spos.w + 0.00000000001);

                    float4 screenPosNorm = screenPos / screenPos.w;
                    screenPosNorm.z = (UNITY_NEAR_CLIP_VALUE >= 0) ? screenPosNorm.z : screenPosNorm.z * 0.5 + 0.5;

                    float eyeDepth = LinearEyeDepth(SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, screenPosNorm.xy));
                    float3 cameraViewDir = -UNITY_MATRIX_V._m20_m21_m22;
                    float3 worldViewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));
                    float3 wpos = ((eyeDepth * worldViewDir * (1.0 / dot(cameraViewDir, worldViewDir))) + _WorldSpaceCameraPos);

                    clip(distance(_WorldSpaceCameraPos, wpos) - distance(_WorldSpaceCameraPos, i.worldPos) + 0.0001f);

                    return 0;
            }
            ENDCG
            */
        }
    